plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
}

android {

    android.defaultConfig.vectorDrawables.useSupportLibrary = true

    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "net.ferraSolution.food"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'version'

    productFlavors {

        development {

            /*resValue "string", "app_name", "B2B - test"
            resValue "drawable", "logo", "ic_launcher_test"*/

            dimension "version"
            versionNameSuffix "-dev"
            //applicationIdSuffix ".dev"

            getProps('./config/development.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }
            /*manifestPlaceholders = [
                    appIcon       : "@mipmap/ic_launcher_test",
                    appIconRounded: "@mipmap/ic_launcher_test"
            ]*/
        }

        production {
            resValue "string", "app_name", "Eventen"
            dimension "version"

            getProps('./config/production.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }

            /*
            manifestPlaceholders = [
                    appIcon       : "@mipmap/ic_launcher",
                    appIconRounded: "@mipmap/ic_launcher_round"
            ]*/

        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'org.jetbrains.kotlin' && requested.name == 'kotlin-reflect') {
                details.useVersion kotlin_version
            }
        }
    }
}

kapt {
    correctErrorTypes = true
}

def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

dependencies {

    //Android
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.20"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.browser:browser:1.3.0"
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.firebase:firebase-database:20.0.0'

    def lifecycle_version = "2.3.1"

    // Required -- JUnit 4 framework
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestUtil 'androidx.test:orchestrator:1.3.0'
    androidTestImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'

    //Firebase

    implementation platform('com.google.firebase:firebase-bom:26.4.0')
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore:23.0.1'
    implementation 'com.google.firebase:firebase-messaging-ktx:22.0.0'

    // Navigation Components
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"

    def glide_version = "4.11.0"
    implementation ("com.github.bumptech.glide:glide:$glide_version"){
        exclude group: "com.android.support"
    }
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // Viewpager dots
    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'

    // Room
    implementation "androidx.room:room-runtime:2.3.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:2.3.0"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.3.0"

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"

    //Epoxy Dependency
    implementation 'com.airbnb.android:epoxy:4.1.0'
    implementation 'com.airbnb.android:epoxy-databinding:4.1.0'
    kapt 'com.airbnb.android:epoxy-processor:4.1.0'

    // Flashbar
    implementation 'com.andrognito.flashbar:flashbar:1.0.3'

    // Kotlin coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2")
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'

    // Koin for Android
    api "org.koin:koin-android:2.1.6"
    api "org.koin:koin-android-viewmodel:2.1.6"
    api "org.koin:koin-androidx-fragment:2.1.6"

    // Architectural Components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //Firebase Bom
    implementation platform('com.google.firebase:firebase-bom:26.1.1')

    // Optional -- Robolectric environment
    androidTestImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.test:core:1.3.0'
    implementation 'androidx.test:core:1.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'info.hoang8f:android-segmented:1.0.6'

    implementation 'saschpe.android:customtabs:3.0.2'

    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'

    implementation 'com.airbnb.android:lottie:3.6.0'

    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //OkHttp  and network dependencies
    api 'com.squareup.okhttp3:okhttp:4.9.0'

    api 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    api('com.squareup.retrofit2:retrofit:2.9.0') {
        exclude group: "com.squareup.okhttp3"
    }
    api('com.squareup.retrofit2:converter-moshi:2.9.0') {
        exclude group: "com.squareup.okhttp3"
    }
    implementation("com.squareup.moshi:moshi-kotlin:1.11.0")
    implementation 'com.auth0.android:jwtdecode:2.0.0'

    implementation 'com.hbb20:ccp:2.5.0'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.9'
    implementation 'com.google.code.gson:gson:2.8.6'

    api 'com.google.android.gms:play-services-maps:17.0.0'

    api 'com.google.android.gms:play-services-location:17.1.0'

    api 'com.google.android.gms:play-services-basement:17.4.0'

    api 'com.google.android.libraries.places:places:2.4.0'
}

apply plugin: 'com.google.gms.google-services'